# This workflow will build the project with multiple Python versions, lint, run
# tests, and build and push Docker images.
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  Test:
    name: Run linting and unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        py-version-img: [
          ["3.8", "3.8-slim-buster"],
          ["3.9", "3.9-slim-buster"],
          ["3.10", "3.10-slim-buster"],
          ["3.11", "3.11-slim-buster"],
          ["3.12", "3.12-slim-buster"],
        ]
        mongodb-version: ["4.2", "4.4", "5.0"]
        mongodb-port: [12345]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.py-version-img[0] }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py-version-img[0] }}
      - name: Install requirements
        run: |
          pip install -e .
          pip install -r requirements_dev.txt
      - name: Lint with flake8
        run: flake8
      - name: Run mypy
        run: mypy foca
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-port: ${{ matrix.mongodb-port }}
      - name: Calculate unit test coverage
        run: |
          coverage run --source foca -m pytest -W ignore::DeprecationWarning
          coverage xml
      - name: Run tests on petstore app
        env:
          DOCKERHUB_ORG: ${{ secrets.DOCKERHUB_ORG }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          export PY_VERSION=${{ matrix.py-version-img[0] }}
          export PY_IMAGE=${{ matrix.py-version-img[1] }}
          docker build \
              -t ${DOCKERHUB_ORG}/${REPO_NAME}:petstore \
              -f docker/Dockerfile \
              --build-arg PY_IMAGE=${PY_IMAGE} \
              .
          cd ./examples/petstore
          docker-compose up --build -d
          cd ../..
          sleep 10
          pytest ./tests/integration_tests.py
